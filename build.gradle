import groovy.json.JsonOutput
import groovy.json.JsonSlurper

task versions {
    if (System.getProperty("offline") != null) return;
    def slurper = new JsonSlurper()

    // get tags
    def pattern = ~/(?m)ext\s*\{\s*neo4jVersion\s*=\s*"(.*)".*/
    def tags = slurper.parseText(new URL("https://api.github.com/repos/neo4j-contrib/neo4j-apoc-procedures/tags").getText())
    def versions = []
    for (tag in tags) {
        def buildText = new URL("https://raw.githubusercontent.com/neo4j-contrib/neo4j-apoc-procedures/" + tag.name + "/build.gradle").getText()

        // search for neo4j version
        def matcher = pattern.matcher(buildText)
        for (def i = 0; i < matcher.getCount(); i++) {

            def version = "{\n" +
                    "      \"neo4j\": \"" + matcher[i][1] + "\",\n" +
                    "        \"apoc\": \"" + tag.name + "\",\n" +
                    "        \"url\": \"http://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/" + tag.name + "\",\n" +
                    "        \"jar\": \"https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/" + tag.name + "/apoc-" + tag.name + "-all.jar\"\n" +
                    "}"

            versions.add(slurper.parseText(version))
        }
    }
    def versionsFile = new File("versions.json")

    versionsFile.write(JsonOutput.prettyPrint(JsonOutput.toJson(versions)))
}

